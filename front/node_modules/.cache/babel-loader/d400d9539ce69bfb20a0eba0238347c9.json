{"ast":null,"code":"var _jsxFileName = \"/Users/kwakgyeongjin/Desktop/code/gyeongjin/front/src/Routes/Detail/DetailContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailContainer = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  _s();\n\n  const [result, setResult] = useState({\n    id: \"\",\n    category: \"\",\n    title: \"\",\n    src: \"\",\n    content: \"\",\n    tags: []\n  });\n  const cardData = useSelector(state => state.cardReducer);\n  const projectCards = cardData.workingCards.concat(cardData.toyCards);\n  useEffect(() => {\n    const fetchData = () => {\n      const targetID = id;\n      const targetIndex = projectCards.findIndex(el => el.id === targetID);\n      const targetItem = projectCards[targetIndex];\n      setResult(Object.assign(result, targetItem));\n      console.log(result);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DetailPresenter, {\n    result: result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailContainer, \"R3DuEEBx71VR9FxeIWP6HkK5qjw=\", false, function () {\n  return [useSelector];\n});\n\n_c = DetailContainer;\nexport default DetailContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailContainer\");","map":{"version":3,"sources":["/Users/kwakgyeongjin/Desktop/code/gyeongjin/front/src/Routes/Detail/DetailContainer.tsx"],"names":["React","useEffect","useState","useSelector","DetailPresenter","DetailContainer","match","params","id","result","setResult","category","title","src","content","tags","cardData","state","cardReducer","projectCards","workingCards","concat","toyCards","fetchData","targetID","targetIndex","findIndex","el","targetItem","Object","assign","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AA+BA,MAAMC,eAAe,GAAG,CAAC;AACxBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADF;AADiB,CAAD,KAIE;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACpCM,IAAAA,EAAE,EAAE,EADgC;AAEpCG,IAAAA,QAAQ,EAAE,EAF0B;AAGpCC,IAAAA,KAAK,EAAE,EAH6B;AAIpCC,IAAAA,GAAG,EAAE,EAJ+B;AAKpCC,IAAAA,OAAO,EAAE,EAL2B;AAMpCC,IAAAA,IAAI,EAAE;AAN8B,GAAD,CAApC;AASA,QAAMC,QAAe,GAAGb,WAAW,CACjCc,KAAD,IAA4BA,KAAK,CAACC,WADA,CAAnC;AAIA,QAAMC,YAAY,GAAGH,QAAQ,CAACI,YAAT,CAAsBC,MAAtB,CAA6BL,QAAQ,CAACM,QAAtC,CAArB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMsB,SAAS,GAAG,MAAM;AACvB,YAAMC,QAAQ,GAAGhB,EAAjB;AACA,YAAMiB,WAAW,GAAGN,YAAY,CAACO,SAAb,CAAwBC,EAAD,IAAQA,EAAE,CAACnB,EAAH,KAAUgB,QAAzC,CAApB;AACA,YAAMI,UAAU,GAAGT,YAAY,CAACM,WAAD,CAA/B;AACAf,MAAAA,SAAS,CAACmB,MAAM,CAACC,MAAP,CAAcrB,MAAd,EAAsBmB,UAAtB,CAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYvB,MAAZ;AACA,KAND;;AAOAc,IAAAA,SAAS;AACT,GATQ,EASN,EATM,CAAT;AAWA,sBAAO,QAAC,eAAD;AAAiB,IAAA,MAAM,EAAEd;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAhCD;;GAAMJ,e;UAcmBF,W;;;KAdnBE,e;AAkCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { RootReducerType } from \"../../reducers/rootReducer\";\n\ninterface Props {\n\tmatch: {\n\t\tparams: {\n\t\t\tid: string;\n\t\t};\n\t};\n}\n\ninterface Cards {\n\tworkingCards: Array<{\n\t\tid: string;\n\t\tcategory: string;\n\t\ttitle: string;\n\t\tsrc: string;\n\t\tcontent: string;\n\t\ttags: Array<string>;\n\t}>;\n\n\ttoyCards: Array<{\n\t\tid: string;\n\t\tcategory: string;\n\t\ttitle: string;\n\t\tsrc: string;\n\t\tcontent: string;\n\t\ttags: Array<string>;\n\t}>;\n}\n\nconst DetailContainer = ({\n\tmatch: {\n\t\tparams: { id },\n\t},\n}: Props): JSX.Element => {\n\tconst [result, setResult] = useState({\n\t\tid: \"\",\n\t\tcategory: \"\",\n\t\ttitle: \"\",\n\t\tsrc: \"\",\n\t\tcontent: \"\",\n\t\ttags: [],\n\t});\n\n\tconst cardData: Cards = useSelector(\n\t\t(state: RootReducerType) => state.cardReducer\n\t);\n\n\tconst projectCards = cardData.workingCards.concat(cardData.toyCards);\n\n\tuseEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\tconst targetID = id;\n\t\t\tconst targetIndex = projectCards.findIndex((el) => el.id === targetID);\n\t\t\tconst targetItem = projectCards[targetIndex];\n\t\t\tsetResult(Object.assign(result, targetItem));\n\t\t\tconsole.log(result);\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\treturn <DetailPresenter result={result} />;\n};\n\nexport default DetailContainer;\n"]},"metadata":{},"sourceType":"module"}